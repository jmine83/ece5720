# Names: Joel Meine & Paul Roylance
# IDs: A01764207 & A01875212
# Source: Not Applicable

# Execution begins at address 0
	.pos 0
	irmovq stack, %rsp  	# Set up stack pointer
	call main				# Execute main program
	halt					# Terminate program

.align 8
# Source block
src:
	.quad 0x00a
	.quad 0x0b0
	.quad 0xc00

# Destination block
dest:
	.quad 0x111
	.quad 0x222
	.quad 0x333

main:
	irmovq src,%rdi
	irmovq dest,%rsi
	irmovq 0x003,%rdx
	call copy_block		# copy_block(src, dest, len)
	ret

# long copy_block(long *src, long *dest, long len)
# src in %rdi, dest in %rsi, len in %rdx, val in %r10
copy_block:
	irmovq $8,%r8        # Constant 8
	irmovq $1,%r9	     # Constant 1
	xorq %rax,%rax	     # result = 0
	andq %rdx,%rdx	     # Set CC
	jmp test 	         # Goto test
loop:
	mrmovq (%rdi),%r10   # Put *src into val
	rmmovq %r10,(%rsi)	 # Put val into *dest
	xorq %r10,%rax       # Get result
	addq %r8,%rdi        # src++
	addq %r8,%rsi	     # dest++
	subq %r9,%rdx        # len--
test:
	jne loop			 # Stop when 0
	ret
# Stack starts here and grows to lower addresses
	.pos 0x2000
stack:
